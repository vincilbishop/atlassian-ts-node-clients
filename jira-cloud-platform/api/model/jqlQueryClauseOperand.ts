/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { FunctionOperand } from './functionOperand';
import { JqlQueryUnitaryOperand } from './jqlQueryUnitaryOperand';
import { KeywordOperand } from './keywordOperand';
import { ListOperand } from './listOperand';
import { ValueOperand } from './valueOperand';

/**
* Details of an operand in a JQL clause.
*/
export class JqlQueryClauseOperand {
    /**
    * The list of operand values.
    */
    'values'?: Array<JqlQueryUnitaryOperand>;
    /**
    * The operand value.
    */
    'value': string;
    /**
    * The name of the function.
    */
    '_function': string;
    /**
    * The list of function arguments.
    */
    'arguments'?: Array<string>;
    /**
    * The keyword that is the operand value.
    */
    'keyword': JqlQueryClauseOperand.KeywordEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "values",
            "baseName": "values",
            "type": "Array<JqlQueryUnitaryOperand>"
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string"
        },
        {
            "name": "_function",
            "baseName": "function",
            "type": "string"
        },
        {
            "name": "arguments",
            "baseName": "arguments",
            "type": "Array<string>"
        },
        {
            "name": "keyword",
            "baseName": "keyword",
            "type": "JqlQueryClauseOperand.KeywordEnum"
        }    ];

    static getAttributeTypeMap() {
        return JqlQueryClauseOperand.attributeTypeMap;
    }
}

export namespace JqlQueryClauseOperand {
    export enum KeywordEnum {
        Empty = <any> 'empty'
    }
}
