/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class ProjectInputBean {
    /**
    * Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters. Required when creating a project. Optional when updating a project.
    */
    'key'?: string;
    /**
    * The name of the project. Required when creating a project. Optional when updating a project.
    */
    'name'?: string;
    /**
    * The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which dictates the application-specific feature set. Required when creating a project. Not applicable for the Update project resource.
    */
    'projectTypeKey'?: ProjectInputBean.ProjectTypeKeyEnum;
    /**
    * A prebuilt configuration for a project. The type of the `projectTemplateKey` must match with the type of the `projectTypeKey`. Required when creating a project. Not applicable for the Update project resource.
    */
    'projectTemplateKey'?: ProjectInputBean.ProjectTemplateKeyEnum;
    /**
    * A brief description of the project.
    */
    'description'?: string;
    /**
    * This parameter is deprecated because of privacy changes. Use `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Optional when updating a project. Cannot be provided with `leadAccountId`.
    */
    'lead'?: string;
    /**
    * The account id of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Optional when updating a project. Cannot be provided with `lead`.
    */
    'leadAccountId'?: string;
    /**
    * A link to information about this project, such as project documentation
    */
    'url'?: string;
    /**
    * The default assignee when creating issues for this project.
    */
    'assigneeType'?: ProjectInputBean.AssigneeTypeEnum;
    /**
    * An integer value for the project\'s avatar.
    */
    'avatarId'?: number;
    /**
    * The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-2-issuesecurityschemes-get) resource to get all issue security scheme IDs.
    */
    'issueSecurityScheme'?: number;
    /**
    * The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-2-permissionscheme-get) resource to see a list of all permission scheme IDs.
    */
    'permissionScheme'?: number;
    /**
    * The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-2-notificationscheme-get) resource to get a list of notification scheme IDs.
    */
    'notificationScheme'?: number;
    /**
    * The ID of the project\'s category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-2-projectCategory-get) operation.
    */
    'categoryId'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "key",
            "baseName": "key",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "projectTypeKey",
            "baseName": "projectTypeKey",
            "type": "ProjectInputBean.ProjectTypeKeyEnum"
        },
        {
            "name": "projectTemplateKey",
            "baseName": "projectTemplateKey",
            "type": "ProjectInputBean.ProjectTemplateKeyEnum"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "lead",
            "baseName": "lead",
            "type": "string"
        },
        {
            "name": "leadAccountId",
            "baseName": "leadAccountId",
            "type": "string"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "assigneeType",
            "baseName": "assigneeType",
            "type": "ProjectInputBean.AssigneeTypeEnum"
        },
        {
            "name": "avatarId",
            "baseName": "avatarId",
            "type": "number"
        },
        {
            "name": "issueSecurityScheme",
            "baseName": "issueSecurityScheme",
            "type": "number"
        },
        {
            "name": "permissionScheme",
            "baseName": "permissionScheme",
            "type": "number"
        },
        {
            "name": "notificationScheme",
            "baseName": "notificationScheme",
            "type": "number"
        },
        {
            "name": "categoryId",
            "baseName": "categoryId",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ProjectInputBean.attributeTypeMap;
    }
}

export namespace ProjectInputBean {
    export enum ProjectTypeKeyEnum {
        Software = <any> 'software',
        ServiceDesk = <any> 'service_desk',
        Business = <any> 'business'
    }
    export enum ProjectTemplateKeyEnum {
        PyxisGreenhopperJiraghSimplifiedAgilityKanban = <any> 'com.pyxis.greenhopper.jira:gh-simplified-agility-kanban',
        PyxisGreenhopperJiraghSimplifiedAgilityScrum = <any> 'com.pyxis.greenhopper.jira:gh-simplified-agility-scrum',
        PyxisGreenhopperJiraghSimplifiedBasic = <any> 'com.pyxis.greenhopper.jira:gh-simplified-basic',
        PyxisGreenhopperJiraghSimplifiedKanbanClassic = <any> 'com.pyxis.greenhopper.jira:gh-simplified-kanban-classic',
        PyxisGreenhopperJiraghSimplifiedScrumClassic = <any> 'com.pyxis.greenhopper.jira:gh-simplified-scrum-classic',
        AtlassianServicedesksimplifiedItServiceDesk = <any> 'com.atlassian.servicedesk:simplified-it-service-desk',
        AtlassianServicedesksimplifiedInternalServiceDesk = <any> 'com.atlassian.servicedesk:simplified-internal-service-desk',
        AtlassianServicedesksimplifiedExternalServiceDesk = <any> 'com.atlassian.servicedesk:simplified-external-service-desk',
        AtlassianJiraCoreProjectTemplatesjiraCoreSimplifiedContentManagement = <any> 'com.atlassian.jira-core-project-templates:jira-core-simplified-content-management',
        AtlassianJiraCoreProjectTemplatesjiraCoreSimplifiedDocumentApproval = <any> 'com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval',
        AtlassianJiraCoreProjectTemplatesjiraCoreSimplifiedLeadTracking = <any> 'com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking',
        AtlassianJiraCoreProjectTemplatesjiraCoreSimplifiedProcessControl = <any> 'com.atlassian.jira-core-project-templates:jira-core-simplified-process-control',
        AtlassianJiraCoreProjectTemplatesjiraCoreSimplifiedProcurement = <any> 'com.atlassian.jira-core-project-templates:jira-core-simplified-procurement',
        AtlassianJiraCoreProjectTemplatesjiraCoreSimplifiedProjectManagement = <any> 'com.atlassian.jira-core-project-templates:jira-core-simplified-project-management',
        AtlassianJiraCoreProjectTemplatesjiraCoreSimplifiedRecruitment = <any> 'com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment',
        AtlassianJiraCoreProjectTemplatesjiraCoreSimplifiedTask = <any> 'com.atlassian.jira-core-project-templates:jira-core-simplified-task-',
        AtlassianJiraJiraIncidentManagementPluginimIncidentManagement = <any> 'com.atlassian.jira.jira-incident-management-plugin:im-incident-management'
    }
    export enum AssigneeTypeEnum {
        PROJECTLEAD = <any> 'PROJECT_LEAD',
        UNASSIGNED = <any> 'UNASSIGNED'
    }
}
