/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { JqlQueryClauseOperand } from './jqlQueryClauseOperand';
import { JqlQueryClauseTimePredicate } from './jqlQueryClauseTimePredicate';
import { JqlQueryField } from './jqlQueryField';

/**
* A clause that asserts a previous value of a field. For example, `status WAS \"Resolved\" BY currentUser() BEFORE \"2019/02/02\"`. See [WAS](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-WASWAS) for more information about the WAS operator.
*/
export class FieldWasClause {
    'field': JqlQueryField;
    /**
    * The operator between the field and operand.
    */
    'operator': FieldWasClause.OperatorEnum;
    'operand': JqlQueryClauseOperand;
    /**
    * The list of time predicates.
    */
    'predicates': Array<JqlQueryClauseTimePredicate>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "field",
            "baseName": "field",
            "type": "JqlQueryField"
        },
        {
            "name": "operator",
            "baseName": "operator",
            "type": "FieldWasClause.OperatorEnum"
        },
        {
            "name": "operand",
            "baseName": "operand",
            "type": "JqlQueryClauseOperand"
        },
        {
            "name": "predicates",
            "baseName": "predicates",
            "type": "Array<JqlQueryClauseTimePredicate>"
        }    ];

    static getAttributeTypeMap() {
        return FieldWasClause.attributeTypeMap;
    }
}

export namespace FieldWasClause {
    export enum OperatorEnum {
        Was = <any> 'was',
        WasIn = <any> 'was in',
        WasNotIn = <any> 'was not in',
        WasNot = <any> 'was not'
    }
}
