/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
* The JQL specifying the issues available in the evaluated Jira expression under the `issues` context variable. Not all issues returned by the JQL query will be loaded, but only a portion of them, as described by the `startAt` and `maxResults` properties. Iterate over pages by inspecting the meta data included in the response.
*/
export class JexpJqlIssues {
    /**
    * The JQL query.
    */
    'query'?: string;
    /**
    * The index of the first issue returned from the JQL query.
    */
    'startAt'?: number;
    /**
    * The maximum number of issues that will be included on the list. This value is currently capped at 1000 but the cap may change without notice.
    */
    'maxResults'?: number;
    /**
    * Determines how to validate the JQL query and treat the validation results.
    */
    'validation'?: JexpJqlIssues.ValidationEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "query",
            "baseName": "query",
            "type": "string"
        },
        {
            "name": "startAt",
            "baseName": "startAt",
            "type": "number"
        },
        {
            "name": "maxResults",
            "baseName": "maxResults",
            "type": "number"
        },
        {
            "name": "validation",
            "baseName": "validation",
            "type": "JexpJqlIssues.ValidationEnum"
        }    ];

    static getAttributeTypeMap() {
        return JexpJqlIssues.attributeTypeMap;
    }
}

export namespace JexpJqlIssues {
    export enum ValidationEnum {
        Strict = <any> 'strict',
        Warn = <any> 'warn',
        None = <any> 'none'
    }
}
