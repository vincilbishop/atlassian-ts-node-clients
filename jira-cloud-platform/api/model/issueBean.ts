/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IncludedFields } from './includedFields';
import { IssueTransition } from './issueTransition';
import { IssueUpdateMetadata } from './issueUpdateMetadata';
import { JsonTypeBean } from './jsonTypeBean';
import { Operations } from './operations';
import { PageOfChangelogs } from './pageOfChangelogs';

export class IssueBean {
    /**
    * Expand options that include additional issue details in the response.
    */
    'expand'?: string;
    /**
    * The ID of the issue.
    */
    'id'?: string;
    /**
    * The URL of the issue details.
    */
    'self'?: string;
    /**
    * The key of the issue.
    */
    'key'?: string;
    /**
    * The rendered value of each field present on the issue.
    */
    'renderedFields'?: { [key: string]: object; };
    /**
    * Details of the issue properties identified in the request.
    */
    'properties'?: { [key: string]: object; };
    /**
    * The ID and name of each field present on the issue.
    */
    'names'?: { [key: string]: string; };
    /**
    * The schema describing each field present on the issue.
    */
    'schema'?: { [key: string]: JsonTypeBean; };
    /**
    * The transitions that can be performed on the issue.
    */
    'transitions'?: Array<IssueTransition>;
    /**
    * The operations that can be performed on the issue.
    */
    'operations'?: Operations;
    /**
    * The metadata for the fields on the issue that can be amended.
    */
    'editmeta'?: IssueUpdateMetadata;
    /**
    * Details of changelogs associated with the issue.
    */
    'changelog'?: PageOfChangelogs;
    /**
    * The versions of each field on the issue.
    */
    'versionedRepresentations'?: { [key: string]: { [key: string]: object; }; };
    'fieldsToInclude'?: IncludedFields;
    'fields'?: { [key: string]: object; };

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "expand",
            "baseName": "expand",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "self",
            "baseName": "self",
            "type": "string"
        },
        {
            "name": "key",
            "baseName": "key",
            "type": "string"
        },
        {
            "name": "renderedFields",
            "baseName": "renderedFields",
            "type": "{ [key: string]: object; }"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "{ [key: string]: object; }"
        },
        {
            "name": "names",
            "baseName": "names",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "schema",
            "baseName": "schema",
            "type": "{ [key: string]: JsonTypeBean; }"
        },
        {
            "name": "transitions",
            "baseName": "transitions",
            "type": "Array<IssueTransition>"
        },
        {
            "name": "operations",
            "baseName": "operations",
            "type": "Operations"
        },
        {
            "name": "editmeta",
            "baseName": "editmeta",
            "type": "IssueUpdateMetadata"
        },
        {
            "name": "changelog",
            "baseName": "changelog",
            "type": "PageOfChangelogs"
        },
        {
            "name": "versionedRepresentations",
            "baseName": "versionedRepresentations",
            "type": "{ [key: string]: { [key: string]: object; }; }"
        },
        {
            "name": "fieldsToInclude",
            "baseName": "fieldsToInclude",
            "type": "IncludedFields"
        },
        {
            "name": "fields",
            "baseName": "fields",
            "type": "{ [key: string]: object; }"
        }    ];

    static getAttributeTypeMap() {
        return IssueBean.attributeTypeMap;
    }
}

