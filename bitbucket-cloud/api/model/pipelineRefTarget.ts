/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Commit } from './commit';
import { PipelineRefTargetAllOf } from './pipelineRefTargetAllOf';
import { PipelineSelector } from './pipelineSelector';
import { PipelineTarget } from './pipelineTarget';

export class PipelineRefTarget {
    'type': string;
    /**
    * The type of reference (branch/tag).
    */
    'refType'?: PipelineRefTarget.RefTypeEnum;
    /**
    * The name of the reference.
    */
    'refName'?: string;
    'commit'?: Commit;
    'selector'?: PipelineSelector;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "refType",
            "baseName": "ref_type",
            "type": "PipelineRefTarget.RefTypeEnum"
        },
        {
            "name": "refName",
            "baseName": "ref_name",
            "type": "string"
        },
        {
            "name": "commit",
            "baseName": "commit",
            "type": "Commit"
        },
        {
            "name": "selector",
            "baseName": "selector",
            "type": "PipelineSelector"
        }    ];

    static getAttributeTypeMap() {
        return PipelineRefTarget.attributeTypeMap;
    }
}

export namespace PipelineRefTarget {
    export enum RefTypeEnum {
        Branch = <any> 'branch',
        Tag = <any> 'tag',
        NamedBranch = <any> 'named_branch',
        Bookmark = <any> 'bookmark'
    }
}
