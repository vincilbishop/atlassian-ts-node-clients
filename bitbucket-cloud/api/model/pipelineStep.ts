/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ModelObject } from './modelObject';
import { PipelineCommand } from './pipelineCommand';
import { PipelineImage } from './pipelineImage';
import { PipelineStepAllOf } from './pipelineStepAllOf';
import { PipelineStepState } from './pipelineStepState';

export class PipelineStep extends ModelObject {
    /**
    * The UUID identifying the step.
    */
    'uuid'?: string;
    /**
    * The timestamp when the step execution was started. This is not set when the step hasn\'t executed yet.
    */
    'startedOn'?: Date;
    /**
    * The timestamp when the step execution was completed. This is not set if the step is still in progress.
    */
    'completedOn'?: Date;
    'state'?: PipelineStepState;
    'image'?: PipelineImage;
    /**
    * The list of commands that are executed as part of the setup phase of the build. These commands are executed outside the build container.
    */
    'setupCommands'?: Array<PipelineCommand>;
    /**
    * The list of build commands. These commands are executed in the build container.
    */
    'scriptCommands'?: Array<PipelineCommand>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string"
        },
        {
            "name": "startedOn",
            "baseName": "started_on",
            "type": "Date"
        },
        {
            "name": "completedOn",
            "baseName": "completed_on",
            "type": "Date"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "PipelineStepState"
        },
        {
            "name": "image",
            "baseName": "image",
            "type": "PipelineImage"
        },
        {
            "name": "setupCommands",
            "baseName": "setup_commands",
            "type": "Array<PipelineCommand>"
        },
        {
            "name": "scriptCommands",
            "baseName": "script_commands",
            "type": "Array<PipelineCommand>"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(PipelineStep.attributeTypeMap);
    }
}

