/**
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { User } from './user';

/**
* Object describing a user\'s role on resources like commits or pull requests.
*/
export class ParticipantAllOf {
    'user'?: User;
    'role'?: ParticipantAllOf.RoleEnum;
    'approved'?: boolean;
    /**
    * The ISO8601 timestamp of the participant\'s action. For approvers, this is the time of their approval. For commenters and pull request reviewers who are not approvers, this is the time they last commented, or null if they have not commented.
    */
    'participatedOn'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "user",
            "baseName": "user",
            "type": "User"
        },
        {
            "name": "role",
            "baseName": "role",
            "type": "ParticipantAllOf.RoleEnum"
        },
        {
            "name": "approved",
            "baseName": "approved",
            "type": "boolean"
        },
        {
            "name": "participatedOn",
            "baseName": "participated_on",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return ParticipantAllOf.attributeTypeMap;
    }
}

export namespace ParticipantAllOf {
    export enum RoleEnum {
        PARTICIPANT = <any> 'PARTICIPANT',
        REVIEWER = <any> 'REVIEWER'
    }
}
